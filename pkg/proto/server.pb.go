// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.7
// source: pkg/proto/server.proto

package proto

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VpnMode int32

const (
	VpnMode_Split VpnMode = 0
	VpnMode_Full  VpnMode = 1
)

// Enum value maps for VpnMode.
var (
	VpnMode_name = map[int32]string{
		0: "Split",
		1: "Full",
	}
	VpnMode_value = map[string]int32{
		"Split": 0,
		"Full":  1,
	}
)

func (x VpnMode) Enum() *VpnMode {
	p := new(VpnMode)
	*p = x
	return p
}

func (x VpnMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VpnMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_server_proto_enumTypes[0].Descriptor()
}

func (VpnMode) Type() protoreflect.EnumType {
	return &file_pkg_proto_server_proto_enumTypes[0]
}

func (x VpnMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VpnMode.Descriptor instead.
func (VpnMode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{0}
}

type VpnStatus int32

const (
	VpnStatus_Disconnected  VpnStatus = 0
	VpnStatus_Connecting    VpnStatus = 1
	VpnStatus_Connected     VpnStatus = 2
	VpnStatus_Disconnecting VpnStatus = 3
	VpnStatus_Reasserting   VpnStatus = 4
)

// Enum value maps for VpnStatus.
var (
	VpnStatus_name = map[int32]string{
		0: "Disconnected",
		1: "Connecting",
		2: "Connected",
		3: "Disconnecting",
		4: "Reasserting",
	}
	VpnStatus_value = map[string]int32{
		"Disconnected":  0,
		"Connecting":    1,
		"Connected":     2,
		"Disconnecting": 3,
		"Reasserting":   4,
	}
)

func (x VpnStatus) Enum() *VpnStatus {
	p := new(VpnStatus)
	*p = x
	return p
}

func (x VpnStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VpnStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_server_proto_enumTypes[1].Descriptor()
}

func (VpnStatus) Type() protoreflect.EnumType {
	return &file_pkg_proto_server_proto_enumTypes[1]
}

func (x VpnStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VpnStatus.Descriptor instead.
func (VpnStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{1}
}

type RiskLevel int32

const (
	RiskLevel_Zero   RiskLevel = 0
	RiskLevel_Low    RiskLevel = 1
	RiskLevel_Medium RiskLevel = 2
	RiskLevel_High   RiskLevel = 3
)

// Enum value maps for RiskLevel.
var (
	RiskLevel_name = map[int32]string{
		0: "Zero",
		1: "Low",
		2: "Medium",
		3: "High",
	}
	RiskLevel_value = map[string]int32{
		"Zero":   0,
		"Low":    1,
		"Medium": 2,
		"High":   3,
	}
)

func (x RiskLevel) Enum() *RiskLevel {
	p := new(RiskLevel)
	*p = x
	return p
}

func (x RiskLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_server_proto_enumTypes[2].Descriptor()
}

func (RiskLevel) Type() protoreflect.EnumType {
	return &file_pkg_proto_server_proto_enumTypes[2]
}

func (x RiskLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskLevel.Descriptor instead.
func (RiskLevel) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{2}
}

type InstallStatus int32

const (
	InstallStatus_Installing InstallStatus = 0
	InstallStatus_Success    InstallStatus = 1
	InstallStatus_Failed     InstallStatus = 2
	InstallStatus_Unknown    InstallStatus = 3
)

// Enum value maps for InstallStatus.
var (
	InstallStatus_name = map[int32]string{
		0: "Installing",
		1: "Success",
		2: "Failed",
		3: "Unknown",
	}
	InstallStatus_value = map[string]int32{
		"Installing": 0,
		"Success":    1,
		"Failed":     2,
		"Unknown":    3,
	}
)

func (x InstallStatus) Enum() *InstallStatus {
	p := new(InstallStatus)
	*p = x
	return p
}

func (x InstallStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstallStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_server_proto_enumTypes[3].Descriptor()
}

func (InstallStatus) Type() protoreflect.EnumType {
	return &file_pkg_proto_server_proto_enumTypes[3]
}

func (x InstallStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstallStatus.Descriptor instead.
func (InstallStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{3}
}

type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{0}
}

type CodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeResponse) Reset() {
	*x = CodeResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeResponse) ProtoMessage() {}

func (x *CodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeResponse.ProtoReflect.Descriptor instead.
func (*CodeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{1}
}

func (x *CodeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type VpnListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	SplitList     []*VpnItemInfo         `protobuf:"bytes,4,rep,name=splitList,proto3" json:"splitList,omitempty"`
	FullList      []*VpnItemInfo         `protobuf:"bytes,5,rep,name=fullList,proto3" json:"fullList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VpnListResponse) Reset() {
	*x = VpnListResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VpnListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpnListResponse) ProtoMessage() {}

func (x *VpnListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpnListResponse.ProtoReflect.Descriptor instead.
func (*VpnListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{2}
}

func (x *VpnListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VpnListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VpnListResponse) GetSplitList() []*VpnItemInfo {
	if x != nil {
		return x.SplitList
	}
	return nil
}

func (x *VpnListResponse) GetFullList() []*VpnItemInfo {
	if x != nil {
		return x.FullList
	}
	return nil
}

type VpnItemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Delay         int32                  `protobuf:"varint,3,opt,name=delay,proto3" json:"delay,omitempty"`
	Icon          string                 `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	DisplayName   string                 `protobuf:"bytes,5,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Mode          int32                  `protobuf:"varint,6,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VpnItemInfo) Reset() {
	*x = VpnItemInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VpnItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpnItemInfo) ProtoMessage() {}

func (x *VpnItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpnItemInfo.ProtoReflect.Descriptor instead.
func (*VpnItemInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{3}
}

func (x *VpnItemInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VpnItemInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VpnItemInfo) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *VpnItemInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *VpnItemInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *VpnItemInfo) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type VpnStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data          *VpnStatusInfo         `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VpnStatusResponse) Reset() {
	*x = VpnStatusResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VpnStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpnStatusResponse) ProtoMessage() {}

func (x *VpnStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpnStatusResponse.ProtoReflect.Descriptor instead.
func (*VpnStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{4}
}

func (x *VpnStatusResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VpnStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VpnStatusResponse) GetData() *VpnStatusInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type VpnStatusInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        VpnStatus              `protobuf:"varint,1,opt,name=status,proto3,enum=server.VpnStatus" json:"status,omitempty"`
	Mode          VpnMode                `protobuf:"varint,2,opt,name=mode,proto3,enum=server.VpnMode" json:"mode,omitempty"`
	UpSpeed       string                 `protobuf:"bytes,3,opt,name=upSpeed,proto3" json:"upSpeed,omitempty"`
	DownSpeed     string                 `protobuf:"bytes,4,opt,name=downSpeed,proto3" json:"downSpeed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VpnStatusInfo) Reset() {
	*x = VpnStatusInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VpnStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpnStatusInfo) ProtoMessage() {}

func (x *VpnStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpnStatusInfo.ProtoReflect.Descriptor instead.
func (*VpnStatusInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{5}
}

func (x *VpnStatusInfo) GetStatus() VpnStatus {
	if x != nil {
		return x.Status
	}
	return VpnStatus_Disconnected
}

func (x *VpnStatusInfo) GetMode() VpnMode {
	if x != nil {
		return x.Mode
	}
	return VpnMode_Split
}

func (x *VpnStatusInfo) GetUpSpeed() string {
	if x != nil {
		return x.UpSpeed
	}
	return ""
}

func (x *VpnStatusInfo) GetDownSpeed() string {
	if x != nil {
		return x.DownSpeed
	}
	return ""
}

type ConnectVpnRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        int32                  `protobuf:"varint,1,opt,name=server,proto3" json:"server,omitempty"`
	Mode          VpnMode                `protobuf:"varint,2,opt,name=mode,proto3,enum=server.VpnMode" json:"mode,omitempty"`
	Otp           string                 `protobuf:"bytes,3,opt,name=otp,proto3" json:"otp,omitempty"`
	Zone          string                 `protobuf:"bytes,4,opt,name=zone,proto3" json:"zone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectVpnRequest) Reset() {
	*x = ConnectVpnRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectVpnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectVpnRequest) ProtoMessage() {}

func (x *ConnectVpnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectVpnRequest.ProtoReflect.Descriptor instead.
func (*ConnectVpnRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectVpnRequest) GetServer() int32 {
	if x != nil {
		return x.Server
	}
	return 0
}

func (x *ConnectVpnRequest) GetMode() VpnMode {
	if x != nil {
		return x.Mode
	}
	return VpnMode_Split
}

func (x *ConnectVpnRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *ConnectVpnRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

type ChangeVpnModeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mode          VpnMode                `protobuf:"varint,1,opt,name=mode,proto3,enum=server.VpnMode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeVpnModeRequest) Reset() {
	*x = ChangeVpnModeRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeVpnModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeVpnModeRequest) ProtoMessage() {}

func (x *ChangeVpnModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeVpnModeRequest.ProtoReflect.Descriptor instead.
func (*ChangeVpnModeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeVpnModeRequest) GetMode() VpnMode {
	if x != nil {
		return x.Mode
	}
	return VpnMode_Split
}

type HttpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Data          string                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpRequest) Reset() {
	*x = HttpRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRequest) ProtoMessage() {}

func (x *HttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRequest.ProtoReflect.Descriptor instead.
func (*HttpRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{8}
}

func (x *HttpRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HttpRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type HttpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data          string                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{9}
}

func (x *HttpResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HttpResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HttpResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type SetupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data          *SetupInfo             `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetupResponse) Reset() {
	*x = SetupResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupResponse) ProtoMessage() {}

func (x *SetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupResponse.ProtoReflect.Descriptor instead.
func (*SetupResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{10}
}

func (x *SetupResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SetupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SetupResponse) GetData() *SetupInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetupInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Setting       string                 `protobuf:"bytes,1,opt,name=setting,proto3" json:"setting,omitempty"`
	App           *AppInfo               `protobuf:"bytes,8,opt,name=app,proto3" json:"app,omitempty"`
	DeviceId      string                 `protobuf:"bytes,9,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Sys           *SystemInfo            `protobuf:"bytes,10,opt,name=sys,proto3" json:"sys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetupInfo) Reset() {
	*x = SetupInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupInfo) ProtoMessage() {}

func (x *SetupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupInfo.ProtoReflect.Descriptor instead.
func (*SetupInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{11}
}

func (x *SetupInfo) GetSetting() string {
	if x != nil {
		return x.Setting
	}
	return ""
}

func (x *SetupInfo) GetApp() *AppInfo {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *SetupInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SetupInfo) GetSys() *SystemInfo {
	if x != nil {
		return x.Sys
	}
	return nil
}

type SystemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	HostName      string                 `protobuf:"bytes,3,opt,name=hostName,proto3" json:"hostName,omitempty"`
	Brand         string                 `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	Model         string                 `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{12}
}

func (x *SystemInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SystemInfo) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *SystemInfo) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *SystemInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type AppInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{13}
}

func (x *AppInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SecurityItemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Level         RiskLevel              `protobuf:"varint,3,opt,name=level,proto3,enum=server.RiskLevel" json:"level,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Link          string                 `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	Repairable    bool                   `protobuf:"varint,6,opt,name=repairable,proto3" json:"repairable,omitempty"`
	NeedManual    bool                   `protobuf:"varint,7,opt,name=need_manual,json=needManual,proto3" json:"need_manual,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityItemInfo) Reset() {
	*x = SecurityItemInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityItemInfo) ProtoMessage() {}

func (x *SecurityItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityItemInfo.ProtoReflect.Descriptor instead.
func (*SecurityItemInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{14}
}

func (x *SecurityItemInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SecurityItemInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SecurityItemInfo) GetLevel() RiskLevel {
	if x != nil {
		return x.Level
	}
	return RiskLevel_Zero
}

func (x *SecurityItemInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SecurityItemInfo) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SecurityItemInfo) GetRepairable() bool {
	if x != nil {
		return x.Repairable
	}
	return false
}

func (x *SecurityItemInfo) GetNeedManual() bool {
	if x != nil {
		return x.NeedManual
	}
	return false
}

type SecurityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*SecurityItemInfo    `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityResponse) Reset() {
	*x = SecurityResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityResponse) ProtoMessage() {}

func (x *SecurityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityResponse.ProtoReflect.Descriptor instead.
func (*SecurityResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{15}
}

func (x *SecurityResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SecurityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SecurityResponse) GetData() []*SecurityItemInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type SecurityFixRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityFixRequest) Reset() {
	*x = SecurityFixRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityFixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityFixRequest) ProtoMessage() {}

func (x *SecurityFixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityFixRequest.ProtoReflect.Descriptor instead.
func (*SecurityFixRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{16}
}

func (x *SecurityFixRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DiagnoseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiagnoseRequest) Reset() {
	*x = DiagnoseRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnoseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnoseRequest) ProtoMessage() {}

func (x *DiagnoseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnoseRequest.ProtoReflect.Descriptor instead.
func (*DiagnoseRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{17}
}

func (x *DiagnoseRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type DiagnoseItemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiagnoseItemInfo) Reset() {
	*x = DiagnoseItemInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnoseItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnoseItemInfo) ProtoMessage() {}

func (x *DiagnoseItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnoseItemInfo.ProtoReflect.Descriptor instead.
func (*DiagnoseItemInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{18}
}

func (x *DiagnoseItemInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DiagnoseItemInfo) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DiagnoseItemInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FeedbackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	LogDir        string                 `protobuf:"bytes,3,opt,name=logDir,proto3" json:"logDir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedbackRequest) Reset() {
	*x = FeedbackRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedbackRequest) ProtoMessage() {}

func (x *FeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedbackRequest.ProtoReflect.Descriptor instead.
func (*FeedbackRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{19}
}

func (x *FeedbackRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FeedbackRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FeedbackRequest) GetLogDir() string {
	if x != nil {
		return x.LogDir
	}
	return ""
}

type LanguageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lang          string                 `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LanguageRequest) Reset() {
	*x = LanguageRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageRequest) ProtoMessage() {}

func (x *LanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageRequest.ProtoReflect.Descriptor instead.
func (*LanguageRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{20}
}

func (x *LanguageRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type SetDomainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDomainRequest) Reset() {
	*x = SetDomainRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDomainRequest) ProtoMessage() {}

func (x *SetDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDomainRequest.ProtoReflect.Descriptor instead.
func (*SetDomainRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{21}
}

func (x *SetDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type CompanyInfoRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Code             string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Domain           string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	EnableSelfSigned bool                   `protobuf:"varint,4,opt,name=enableSelfSigned,proto3" json:"enableSelfSigned,omitempty"`
	SelfSignedCert   string                 `protobuf:"bytes,5,opt,name=selfSignedCert,proto3" json:"selfSignedCert,omitempty"`
	EnablePublicKey  bool                   `protobuf:"varint,6,opt,name=enablePublicKey,proto3" json:"enablePublicKey,omitempty"`
	PublicKey        string                 `protobuf:"bytes,7,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CompanyInfoRequest) Reset() {
	*x = CompanyInfoRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompanyInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyInfoRequest) ProtoMessage() {}

func (x *CompanyInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyInfoRequest.ProtoReflect.Descriptor instead.
func (*CompanyInfoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{22}
}

func (x *CompanyInfoRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CompanyInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyInfoRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CompanyInfoRequest) GetEnableSelfSigned() bool {
	if x != nil {
		return x.EnableSelfSigned
	}
	return false
}

func (x *CompanyInfoRequest) GetSelfSignedCert() string {
	if x != nil {
		return x.SelfSignedCert
	}
	return ""
}

func (x *CompanyInfoRequest) GetEnablePublicKey() bool {
	if x != nil {
		return x.EnablePublicKey
	}
	return false
}

func (x *CompanyInfoRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type NetworkInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data          *NetworkInfo           `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInfoResponse) Reset() {
	*x = NetworkInfoResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInfoResponse) ProtoMessage() {}

func (x *NetworkInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInfoResponse.ProtoReflect.Descriptor instead.
func (*NetworkInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{23}
}

func (x *NetworkInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NetworkInfoResponse) GetData() *NetworkInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type CookieRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Domain        string                 `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Expires       int64                  `protobuf:"varint,5,opt,name=expires,proto3" json:"expires,omitempty"`
	MaxAge        int32                  `protobuf:"varint,6,opt,name=maxAge,proto3" json:"maxAge,omitempty"`
	Secure        bool                   `protobuf:"varint,7,opt,name=secure,proto3" json:"secure,omitempty"`
	HttpOnly      bool                   `protobuf:"varint,8,opt,name=httpOnly,proto3" json:"httpOnly,omitempty"`
	SameSite      int32                  `protobuf:"varint,9,opt,name=SameSite,proto3" json:"SameSite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CookieRequest) Reset() {
	*x = CookieRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CookieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookieRequest) ProtoMessage() {}

func (x *CookieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CookieRequest.ProtoReflect.Descriptor instead.
func (*CookieRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{24}
}

func (x *CookieRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CookieRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CookieRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CookieRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CookieRequest) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *CookieRequest) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *CookieRequest) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

func (x *CookieRequest) GetHttpOnly() bool {
	if x != nil {
		return x.HttpOnly
	}
	return false
}

func (x *CookieRequest) GetSameSite() int32 {
	if x != nil {
		return x.SameSite
	}
	return 0
}

type SetCookiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cookies       []*CookieRequest       `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCookiesRequest) Reset() {
	*x = SetCookiesRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCookiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCookiesRequest) ProtoMessage() {}

func (x *SetCookiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCookiesRequest.ProtoReflect.Descriptor instead.
func (*SetCookiesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{25}
}

func (x *SetCookiesRequest) GetCookies() []*CookieRequest {
	if x != nil {
		return x.Cookies
	}
	return nil
}

type NetworkInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Dns           string                 `protobuf:"bytes,3,opt,name=dns,proto3" json:"dns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInfo) Reset() {
	*x = NetworkInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInfo) ProtoMessage() {}

func (x *NetworkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInfo.ProtoReflect.Descriptor instead.
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{26}
}

func (x *NetworkInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NetworkInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *NetworkInfo) GetDns() string {
	if x != nil {
		return x.Dns
	}
	return ""
}

type SoftwareInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Publisher     string                 `protobuf:"bytes,1,opt,name=publisher,proto3" json:"publisher,omitempty"`
	SoftwareId    string                 `protobuf:"bytes,2,opt,name=software_id,json=softwareId,proto3" json:"software_id,omitempty"`
	SoftwareName  string                 `protobuf:"bytes,3,opt,name=software_name,json=softwareName,proto3" json:"software_name,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Level         RiskLevel              `protobuf:"varint,5,opt,name=level,proto3,enum=server.RiskLevel" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SoftwareInfo) Reset() {
	*x = SoftwareInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoftwareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareInfo) ProtoMessage() {}

func (x *SoftwareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftwareInfo.ProtoReflect.Descriptor instead.
func (*SoftwareInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{27}
}

func (x *SoftwareInfo) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *SoftwareInfo) GetSoftwareId() string {
	if x != nil {
		return x.SoftwareId
	}
	return ""
}

func (x *SoftwareInfo) GetSoftwareName() string {
	if x != nil {
		return x.SoftwareName
	}
	return ""
}

func (x *SoftwareInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SoftwareInfo) GetLevel() RiskLevel {
	if x != nil {
		return x.Level
	}
	return RiskLevel_Zero
}

type SoftwareAlarmData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequiredList  []*SoftwareInfo        `protobuf:"bytes,1,rep,name=required_list,json=requiredList,proto3" json:"required_list,omitempty"`
	ForbiddenList []*SoftwareInfo        `protobuf:"bytes,2,rep,name=forbidden_list,json=forbiddenList,proto3" json:"forbidden_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SoftwareAlarmData) Reset() {
	*x = SoftwareAlarmData{}
	mi := &file_pkg_proto_server_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoftwareAlarmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareAlarmData) ProtoMessage() {}

func (x *SoftwareAlarmData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftwareAlarmData.ProtoReflect.Descriptor instead.
func (*SoftwareAlarmData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{28}
}

func (x *SoftwareAlarmData) GetRequiredList() []*SoftwareInfo {
	if x != nil {
		return x.RequiredList
	}
	return nil
}

func (x *SoftwareAlarmData) GetForbiddenList() []*SoftwareInfo {
	if x != nil {
		return x.ForbiddenList
	}
	return nil
}

type SoftwareAlarmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *SoftwareAlarmData     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SoftwareAlarmResponse) Reset() {
	*x = SoftwareAlarmResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoftwareAlarmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareAlarmResponse) ProtoMessage() {}

func (x *SoftwareAlarmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftwareAlarmResponse.ProtoReflect.Descriptor instead.
func (*SoftwareAlarmResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{29}
}

func (x *SoftwareAlarmResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SoftwareAlarmResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SoftwareAlarmResponse) GetData() *SoftwareAlarmData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WiFiStatusData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connected     bool                   `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	Ssid          string                 `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Bssid         string                 `protobuf:"bytes,3,opt,name=bssid,proto3" json:"bssid,omitempty"`
	Auth          string                 `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	Channel       int32                  `protobuf:"varint,5,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WiFiStatusData) Reset() {
	*x = WiFiStatusData{}
	mi := &file_pkg_proto_server_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WiFiStatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiFiStatusData) ProtoMessage() {}

func (x *WiFiStatusData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiFiStatusData.ProtoReflect.Descriptor instead.
func (*WiFiStatusData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{30}
}

func (x *WiFiStatusData) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *WiFiStatusData) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WiFiStatusData) GetBssid() string {
	if x != nil {
		return x.Bssid
	}
	return ""
}

func (x *WiFiStatusData) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *WiFiStatusData) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type WiFiStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data          *WiFiStatusData        `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WiFiStatusResponse) Reset() {
	*x = WiFiStatusResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WiFiStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiFiStatusResponse) ProtoMessage() {}

func (x *WiFiStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiFiStatusResponse.ProtoReflect.Descriptor instead.
func (*WiFiStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{31}
}

func (x *WiFiStatusResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WiFiStatusResponse) GetData() *WiFiStatusData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WiFiConnectRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Ssid             string                 `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Type             string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Username         string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password         string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	IsHiddenPassword bool                   `protobuf:"varint,5,opt,name=isHiddenPassword,proto3" json:"isHiddenPassword,omitempty"`
	NetAccessType    int32                  `protobuf:"varint,6,opt,name=netAccessType,proto3" json:"netAccessType,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WiFiConnectRequest) Reset() {
	*x = WiFiConnectRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WiFiConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiFiConnectRequest) ProtoMessage() {}

func (x *WiFiConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiFiConnectRequest.ProtoReflect.Descriptor instead.
func (*WiFiConnectRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{32}
}

func (x *WiFiConnectRequest) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WiFiConnectRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WiFiConnectRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *WiFiConnectRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *WiFiConnectRequest) GetIsHiddenPassword() bool {
	if x != nil {
		return x.IsHiddenPassword
	}
	return false
}

func (x *WiFiConnectRequest) GetNetAccessType() int32 {
	if x != nil {
		return x.NetAccessType
	}
	return 0
}

type WiFiDisconnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ssid          string                 `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WiFiDisconnectRequest) Reset() {
	*x = WiFiDisconnectRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WiFiDisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiFiDisconnectRequest) ProtoMessage() {}

func (x *WiFiDisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiFiDisconnectRequest.ProtoReflect.Descriptor instead.
func (*WiFiDisconnectRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{33}
}

func (x *WiFiDisconnectRequest) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

type ProcessInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessName   string                 `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Sign          string                 `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Level         RiskLevel              `protobuf:"varint,3,opt,name=level,proto3,enum=server.RiskLevel" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{34}
}

func (x *ProcessInfo) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *ProcessInfo) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *ProcessInfo) GetLevel() RiskLevel {
	if x != nil {
		return x.Level
	}
	return RiskLevel_Zero
}

type ProcessAlarmData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequiredList  []*ProcessInfo         `protobuf:"bytes,1,rep,name=required_list,json=requiredList,proto3" json:"required_list,omitempty"`
	ForbiddenList []*ProcessInfo         `protobuf:"bytes,2,rep,name=forbidden_list,json=forbiddenList,proto3" json:"forbidden_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessAlarmData) Reset() {
	*x = ProcessAlarmData{}
	mi := &file_pkg_proto_server_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessAlarmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessAlarmData) ProtoMessage() {}

func (x *ProcessAlarmData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessAlarmData.ProtoReflect.Descriptor instead.
func (*ProcessAlarmData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{35}
}

func (x *ProcessAlarmData) GetRequiredList() []*ProcessInfo {
	if x != nil {
		return x.RequiredList
	}
	return nil
}

func (x *ProcessAlarmData) GetForbiddenList() []*ProcessInfo {
	if x != nil {
		return x.ForbiddenList
	}
	return nil
}

type ProcessAlarmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *ProcessAlarmData      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessAlarmResponse) Reset() {
	*x = ProcessAlarmResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessAlarmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessAlarmResponse) ProtoMessage() {}

func (x *ProcessAlarmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessAlarmResponse.ProtoReflect.Descriptor instead.
func (*ProcessAlarmResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{36}
}

func (x *ProcessAlarmResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProcessAlarmResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessAlarmResponse) GetData() *ProcessAlarmData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConfigWiredRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Username           string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password           string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	IsHiddenPassword   bool                   `protobuf:"varint,5,opt,name=isHiddenPassword,proto3" json:"isHiddenPassword,omitempty"`
	NetAccessType      int32                  `protobuf:"varint,6,opt,name=netAccessType,proto3" json:"netAccessType,omitempty"`
	TrustedServerNames []string               `protobuf:"bytes,7,rep,name=trustedServerNames,proto3" json:"trustedServerNames,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConfigWiredRequest) Reset() {
	*x = ConfigWiredRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigWiredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigWiredRequest) ProtoMessage() {}

func (x *ConfigWiredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigWiredRequest.ProtoReflect.Descriptor instead.
func (*ConfigWiredRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{37}
}

func (x *ConfigWiredRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConfigWiredRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConfigWiredRequest) GetIsHiddenPassword() bool {
	if x != nil {
		return x.IsHiddenPassword
	}
	return false
}

func (x *ConfigWiredRequest) GetNetAccessType() int32 {
	if x != nil {
		return x.NetAccessType
	}
	return 0
}

func (x *ConfigWiredRequest) GetTrustedServerNames() []string {
	if x != nil {
		return x.TrustedServerNames
	}
	return nil
}

type GetNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{38}
}

func (x *GetNotificationRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type NotificationResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Code          int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data          *NotificationResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationResponse) Reset() {
	*x = NotificationResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponse) ProtoMessage() {}

func (x *NotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponse.ProtoReflect.Descriptor instead.
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{39}
}

func (x *NotificationResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NotificationResponse) GetData() *NotificationResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type NotificationResponseData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       string                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationResponseData) Reset() {
	*x = NotificationResponseData{}
	mi := &file_pkg_proto_server_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponseData) ProtoMessage() {}

func (x *NotificationResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponseData.ProtoReflect.Descriptor instead.
func (*NotificationResponseData) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{40}
}

func (x *NotificationResponseData) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type SecurityModuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *SecurityModuleInfo    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityModuleResponse) Reset() {
	*x = SecurityModuleResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityModuleResponse) ProtoMessage() {}

func (x *SecurityModuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityModuleResponse.ProtoReflect.Descriptor instead.
func (*SecurityModuleResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{41}
}

func (x *SecurityModuleResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SecurityModuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SecurityModuleResponse) GetData() *SecurityModuleInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type SecurityModuleInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EnableSecurity bool                   `protobuf:"varint,1,opt,name=enableSecurity,proto3" json:"enableSecurity,omitempty"`
	EnableSoftware bool                   `protobuf:"varint,2,opt,name=enableSoftware,proto3" json:"enableSoftware,omitempty"`
	EnableProcess  bool                   `protobuf:"varint,3,opt,name=enableProcess,proto3" json:"enableProcess,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SecurityModuleInfo) Reset() {
	*x = SecurityModuleInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityModuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityModuleInfo) ProtoMessage() {}

func (x *SecurityModuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityModuleInfo.ProtoReflect.Descriptor instead.
func (*SecurityModuleInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{42}
}

func (x *SecurityModuleInfo) GetEnableSecurity() bool {
	if x != nil {
		return x.EnableSecurity
	}
	return false
}

func (x *SecurityModuleInfo) GetEnableSoftware() bool {
	if x != nil {
		return x.EnableSoftware
	}
	return false
}

func (x *SecurityModuleInfo) GetEnableProcess() bool {
	if x != nil {
		return x.EnableProcess
	}
	return false
}

type DeviceRuntimeStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuPercent    float32                `protobuf:"fixed32,1,opt,name=cpuPercent,proto3" json:"cpuPercent,omitempty"`
	MemPercent    float32                `protobuf:"fixed32,2,opt,name=memPercent,proto3" json:"memPercent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceRuntimeStats) Reset() {
	*x = DeviceRuntimeStats{}
	mi := &file_pkg_proto_server_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceRuntimeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceRuntimeStats) ProtoMessage() {}

func (x *DeviceRuntimeStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceRuntimeStats.ProtoReflect.Descriptor instead.
func (*DeviceRuntimeStats) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{43}
}

func (x *DeviceRuntimeStats) GetCpuPercent() float32 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *DeviceRuntimeStats) GetMemPercent() float32 {
	if x != nil {
		return x.MemPercent
	}
	return 0
}

type DeviceInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data          *DeviceInfo            `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceInfoResponse) Reset() {
	*x = DeviceInfoResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoResponse) ProtoMessage() {}

func (x *DeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*DeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{44}
}

func (x *DeviceInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeviceInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeviceInfoResponse) GetData() *DeviceInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OsVersion     string                 `protobuf:"bytes,1,opt,name=osVersion,proto3" json:"osVersion,omitempty"`
	Interfaces    []*InterfaceInfo       `protobuf:"bytes,2,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Routes        []*RouteInfo           `protobuf:"bytes,3,rep,name=routes,proto3" json:"routes,omitempty"`
	Vpn           *VPNConnectionInfo     `protobuf:"bytes,4,opt,name=vpn,proto3" json:"vpn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{45}
}

func (x *DeviceInfo) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *DeviceInfo) GetInterfaces() []*InterfaceInfo {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *DeviceInfo) GetRoutes() []*RouteInfo {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *DeviceInfo) GetVpn() *VPNConnectionInfo {
	if x != nil {
		return x.Vpn
	}
	return nil
}

type InterfaceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Status        int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Ipv4          []string               `protobuf:"bytes,4,rep,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6          []string               `protobuf:"bytes,5,rep,name=ipv6,proto3" json:"ipv6,omitempty"`
	Mac           string                 `protobuf:"bytes,6,opt,name=mac,proto3" json:"mac,omitempty"`
	Ssid          string                 `protobuf:"bytes,7,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Signal        int32                  `protobuf:"varint,8,opt,name=signal,proto3" json:"signal,omitempty"`
	Auth          string                 `protobuf:"bytes,9,opt,name=auth,proto3" json:"auth,omitempty"`
	Gateway       string                 `protobuf:"bytes,10,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Dns           []string               `protobuf:"bytes,11,rep,name=dns,proto3" json:"dns,omitempty"`
	Dhcp          bool                   `protobuf:"varint,12,opt,name=dhcp,proto3" json:"dhcp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfaceInfo) Reset() {
	*x = InterfaceInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceInfo) ProtoMessage() {}

func (x *InterfaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceInfo.ProtoReflect.Descriptor instead.
func (*InterfaceInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{46}
}

func (x *InterfaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InterfaceInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *InterfaceInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *InterfaceInfo) GetIpv4() []string {
	if x != nil {
		return x.Ipv4
	}
	return nil
}

func (x *InterfaceInfo) GetIpv6() []string {
	if x != nil {
		return x.Ipv6
	}
	return nil
}

func (x *InterfaceInfo) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *InterfaceInfo) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *InterfaceInfo) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *InterfaceInfo) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *InterfaceInfo) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *InterfaceInfo) GetDns() []string {
	if x != nil {
		return x.Dns
	}
	return nil
}

func (x *InterfaceInfo) GetDhcp() bool {
	if x != nil {
		return x.Dhcp
	}
	return false
}

type RouteInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Destination   string                 `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Netmask       string                 `protobuf:"bytes,2,opt,name=netmask,proto3" json:"netmask,omitempty"`
	Gateway       string                 `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Interface     string                 `protobuf:"bytes,4,opt,name=interface,proto3" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteInfo) Reset() {
	*x = RouteInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteInfo) ProtoMessage() {}

func (x *RouteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteInfo.ProtoReflect.Descriptor instead.
func (*RouteInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{47}
}

func (x *RouteInfo) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *RouteInfo) GetNetmask() string {
	if x != nil {
		return x.Netmask
	}
	return ""
}

func (x *RouteInfo) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *RouteInfo) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

type VPNConnectionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        VpnStatus              `protobuf:"varint,1,opt,name=status,proto3,enum=server.VpnStatus" json:"status,omitempty"`
	ServerName    string                 `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Dns           []string               `protobuf:"bytes,4,rep,name=dns,proto3" json:"dns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VPNConnectionInfo) Reset() {
	*x = VPNConnectionInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VPNConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPNConnectionInfo) ProtoMessage() {}

func (x *VPNConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPNConnectionInfo.ProtoReflect.Descriptor instead.
func (*VPNConnectionInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{48}
}

func (x *VPNConnectionInfo) GetStatus() VpnStatus {
	if x != nil {
		return x.Status
	}
	return VpnStatus_Disconnected
}

func (x *VPNConnectionInfo) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *VPNConnectionInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *VPNConnectionInfo) GetDns() []string {
	if x != nil {
		return x.Dns
	}
	return nil
}

type SetDNSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDNSRequest) Reset() {
	*x = SetDNSRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDNSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDNSRequest) ProtoMessage() {}

func (x *SetDNSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDNSRequest.ProtoReflect.Descriptor instead.
func (*SetDNSRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{49}
}

func (x *SetDNSRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SetDNSRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type DNSRecommendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data          *DNSRecommendInfo      `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DNSRecommendResponse) Reset() {
	*x = DNSRecommendResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSRecommendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSRecommendResponse) ProtoMessage() {}

func (x *DNSRecommendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSRecommendResponse.ProtoReflect.Descriptor instead.
func (*DNSRecommendResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{50}
}

func (x *DNSRecommendResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DNSRecommendResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DNSRecommendResponse) GetData() *DNSRecommendInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type DNSRecommendInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enable        bool                   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Items         []*DNSRecommendItem    `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DNSRecommendInfo) Reset() {
	*x = DNSRecommendInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSRecommendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSRecommendInfo) ProtoMessage() {}

func (x *DNSRecommendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSRecommendInfo.ProtoReflect.Descriptor instead.
func (*DNSRecommendInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{51}
}

func (x *DNSRecommendInfo) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *DNSRecommendInfo) GetItems() []*DNSRecommendItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DNSRecommendItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Delay         int32                  `protobuf:"varint,3,opt,name=delay,proto3" json:"delay,omitempty"`
	Websites      []*DNSWebsiteDelayItem `protobuf:"bytes,4,rep,name=websites,proto3" json:"websites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DNSRecommendItem) Reset() {
	*x = DNSRecommendItem{}
	mi := &file_pkg_proto_server_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSRecommendItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSRecommendItem) ProtoMessage() {}

func (x *DNSRecommendItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSRecommendItem.ProtoReflect.Descriptor instead.
func (*DNSRecommendItem) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{52}
}

func (x *DNSRecommendItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DNSRecommendItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *DNSRecommendItem) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *DNSRecommendItem) GetWebsites() []*DNSWebsiteDelayItem {
	if x != nil {
		return x.Websites
	}
	return nil
}

type DNSWebsiteDelayItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Delay         int32                  `protobuf:"varint,3,opt,name=delay,proto3" json:"delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DNSWebsiteDelayItem) Reset() {
	*x = DNSWebsiteDelayItem{}
	mi := &file_pkg_proto_server_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSWebsiteDelayItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSWebsiteDelayItem) ProtoMessage() {}

func (x *DNSWebsiteDelayItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSWebsiteDelayItem.ProtoReflect.Descriptor instead.
func (*DNSWebsiteDelayItem) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{53}
}

func (x *DNSWebsiteDelayItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DNSWebsiteDelayItem) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type InstallSoftwareRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PackageKey       string                 `protobuf:"bytes,1,opt,name=packageKey,proto3" json:"packageKey,omitempty"`
	PackagePath      string                 `protobuf:"bytes,2,opt,name=packagePath,proto3" json:"packagePath,omitempty"`
	BundleId         string                 `protobuf:"bytes,3,opt,name=bundleId,proto3" json:"bundleId,omitempty"`
	Publisher        string                 `protobuf:"bytes,4,opt,name=publisher,proto3" json:"publisher,omitempty"`
	SoftwareName     string                 `protobuf:"bytes,5,opt,name=softwareName,proto3" json:"softwareName,omitempty"`
	Version          string                 `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	SilentInstallArg *InstallCmd            `protobuf:"bytes,7,opt,name=silentInstallArg,proto3" json:"silentInstallArg,omitempty"`
	InstallDirArg    *InstallCmd            `protobuf:"bytes,8,opt,name=installDirArg,proto3" json:"installDirArg,omitempty"`
	InstallDir       string                 `protobuf:"bytes,9,opt,name=installDir,proto3" json:"installDir,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InstallSoftwareRequest) Reset() {
	*x = InstallSoftwareRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSoftwareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSoftwareRequest) ProtoMessage() {}

func (x *InstallSoftwareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSoftwareRequest.ProtoReflect.Descriptor instead.
func (*InstallSoftwareRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{54}
}

func (x *InstallSoftwareRequest) GetPackageKey() string {
	if x != nil {
		return x.PackageKey
	}
	return ""
}

func (x *InstallSoftwareRequest) GetPackagePath() string {
	if x != nil {
		return x.PackagePath
	}
	return ""
}

func (x *InstallSoftwareRequest) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *InstallSoftwareRequest) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *InstallSoftwareRequest) GetSoftwareName() string {
	if x != nil {
		return x.SoftwareName
	}
	return ""
}

func (x *InstallSoftwareRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstallSoftwareRequest) GetSilentInstallArg() *InstallCmd {
	if x != nil {
		return x.SilentInstallArg
	}
	return nil
}

func (x *InstallSoftwareRequest) GetInstallDirArg() *InstallCmd {
	if x != nil {
		return x.InstallDirArg
	}
	return nil
}

func (x *InstallSoftwareRequest) GetInstallDir() string {
	if x != nil {
		return x.InstallDir
	}
	return ""
}

type InstallCmd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Arg           string                 `protobuf:"bytes,1,opt,name=arg,proto3" json:"arg,omitempty"`
	Index         int32                  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallCmd) Reset() {
	*x = InstallCmd{}
	mi := &file_pkg_proto_server_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallCmd) ProtoMessage() {}

func (x *InstallCmd) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallCmd.ProtoReflect.Descriptor instead.
func (*InstallCmd) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{55}
}

func (x *InstallCmd) GetArg() string {
	if x != nil {
		return x.Arg
	}
	return ""
}

func (x *InstallCmd) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type GetInstallTaskInfoRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PackageKey         string                 `protobuf:"bytes,1,opt,name=packageKey,proto3" json:"packageKey,omitempty"`
	Version            string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	BundleId           string                 `protobuf:"bytes,3,opt,name=bundleId,proto3" json:"bundleId,omitempty"`
	Publisher          string                 `protobuf:"bytes,4,opt,name=publisher,proto3" json:"publisher,omitempty"`
	SoftwareName       string                 `protobuf:"bytes,5,opt,name=softwareName,proto3" json:"softwareName,omitempty"`
	EnableInstallCheck bool                   `protobuf:"varint,6,opt,name=enableInstallCheck,proto3" json:"enableInstallCheck,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetInstallTaskInfoRequest) Reset() {
	*x = GetInstallTaskInfoRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstallTaskInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstallTaskInfoRequest) ProtoMessage() {}

func (x *GetInstallTaskInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstallTaskInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInstallTaskInfoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{56}
}

func (x *GetInstallTaskInfoRequest) GetPackageKey() string {
	if x != nil {
		return x.PackageKey
	}
	return ""
}

func (x *GetInstallTaskInfoRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetInstallTaskInfoRequest) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *GetInstallTaskInfoRequest) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *GetInstallTaskInfoRequest) GetSoftwareName() string {
	if x != nil {
		return x.SoftwareName
	}
	return ""
}

func (x *GetInstallTaskInfoRequest) GetEnableInstallCheck() bool {
	if x != nil {
		return x.EnableInstallCheck
	}
	return false
}

type InstallTaskInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        InstallStatus          `protobuf:"varint,3,opt,name=status,proto3,enum=server.InstallStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallTaskInfoResponse) Reset() {
	*x = InstallTaskInfoResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallTaskInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallTaskInfoResponse) ProtoMessage() {}

func (x *InstallTaskInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallTaskInfoResponse.ProtoReflect.Descriptor instead.
func (*InstallTaskInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{57}
}

func (x *InstallTaskInfoResponse) GetStatus() InstallStatus {
	if x != nil {
		return x.Status
	}
	return InstallStatus_Installing
}

type InstalledSoftwareResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Code          int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*InstalledSoftwareItemInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstalledSoftwareResponse) Reset() {
	*x = InstalledSoftwareResponse{}
	mi := &file_pkg_proto_server_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstalledSoftwareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstalledSoftwareResponse) ProtoMessage() {}

func (x *InstalledSoftwareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstalledSoftwareResponse.ProtoReflect.Descriptor instead.
func (*InstalledSoftwareResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{58}
}

func (x *InstalledSoftwareResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InstalledSoftwareResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InstalledSoftwareResponse) GetData() []*InstalledSoftwareItemInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type InstalledSoftwareItemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Publisher     string                 `protobuf:"bytes,2,opt,name=publisher,proto3" json:"publisher,omitempty"`
	BundleId      string                 `protobuf:"bytes,3,opt,name=bundleId,proto3" json:"bundleId,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	InstallTime   int64                  `protobuf:"varint,5,opt,name=installTime,proto3" json:"installTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstalledSoftwareItemInfo) Reset() {
	*x = InstalledSoftwareItemInfo{}
	mi := &file_pkg_proto_server_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstalledSoftwareItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstalledSoftwareItemInfo) ProtoMessage() {}

func (x *InstalledSoftwareItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstalledSoftwareItemInfo.ProtoReflect.Descriptor instead.
func (*InstalledSoftwareItemInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{59}
}

func (x *InstalledSoftwareItemInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstalledSoftwareItemInfo) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *InstalledSoftwareItemInfo) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *InstalledSoftwareItemInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstalledSoftwareItemInfo) GetInstallTime() int64 {
	if x != nil {
		return x.InstallTime
	}
	return 0
}

type CheckWiFiGuideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ssids         []string               `protobuf:"bytes,2,rep,name=ssids,proto3" json:"ssids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckWiFiGuideRequest) Reset() {
	*x = CheckWiFiGuideRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckWiFiGuideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWiFiGuideRequest) ProtoMessage() {}

func (x *CheckWiFiGuideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWiFiGuideRequest.ProtoReflect.Descriptor instead.
func (*CheckWiFiGuideRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{60}
}

func (x *CheckWiFiGuideRequest) GetSsids() []string {
	if x != nil {
		return x.Ssids
	}
	return nil
}

type WiFiRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ssids         []string               `protobuf:"bytes,2,rep,name=ssids,proto3" json:"ssids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WiFiRemoveRequest) Reset() {
	*x = WiFiRemoveRequest{}
	mi := &file_pkg_proto_server_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WiFiRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiFiRemoveRequest) ProtoMessage() {}

func (x *WiFiRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_server_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiFiRemoveRequest.ProtoReflect.Descriptor instead.
func (*WiFiRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_server_proto_rawDescGZIP(), []int{61}
}

func (x *WiFiRemoveRequest) GetSsids() []string {
	if x != nil {
		return x.Ssids
	}
	return nil
}

var File_pkg_proto_server_proto protoreflect.FileDescriptor

const file_pkg_proto_server_proto_rawDesc = "" +
	"\n" +
	"\x16pkg/proto/server.proto\x12\x06server\"\x0e\n" +
	"\fEmptyRequest\"<\n" +
	"\fCodeResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xa3\x01\n" +
	"\x0fVpnListResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x121\n" +
	"\tsplitList\x18\x04 \x03(\v2\x13.server.VpnItemInfoR\tsplitList\x12/\n" +
	"\bfullList\x18\x05 \x03(\v2\x13.server.VpnItemInfoR\bfullList\"\x91\x01\n" +
	"\vVpnItemInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05delay\x18\x03 \x01(\x05R\x05delay\x12\x12\n" +
	"\x04icon\x18\x04 \x01(\tR\x04icon\x12 \n" +
	"\vdisplayName\x18\x05 \x01(\tR\vdisplayName\x12\x12\n" +
	"\x04mode\x18\x06 \x01(\x05R\x04mode\"l\n" +
	"\x11VpnStatusResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12)\n" +
	"\x04data\x18\x04 \x01(\v2\x15.server.VpnStatusInfoR\x04data\"\x97\x01\n" +
	"\rVpnStatusInfo\x12)\n" +
	"\x06status\x18\x01 \x01(\x0e2\x11.server.VpnStatusR\x06status\x12#\n" +
	"\x04mode\x18\x02 \x01(\x0e2\x0f.server.VpnModeR\x04mode\x12\x18\n" +
	"\aupSpeed\x18\x03 \x01(\tR\aupSpeed\x12\x1c\n" +
	"\tdownSpeed\x18\x04 \x01(\tR\tdownSpeed\"v\n" +
	"\x11ConnectVpnRequest\x12\x16\n" +
	"\x06server\x18\x01 \x01(\x05R\x06server\x12#\n" +
	"\x04mode\x18\x02 \x01(\x0e2\x0f.server.VpnModeR\x04mode\x12\x10\n" +
	"\x03otp\x18\x03 \x01(\tR\x03otp\x12\x12\n" +
	"\x04zone\x18\x04 \x01(\tR\x04zone\";\n" +
	"\x14ChangeVpnModeRequest\x12#\n" +
	"\x04mode\x18\x01 \x01(\x0e2\x0f.server.VpnModeR\x04mode\"K\n" +
	"\vHttpRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x12\n" +
	"\x04data\x18\x04 \x01(\tR\x04data\"P\n" +
	"\fHttpResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x12\n" +
	"\x04data\x18\x04 \x01(\tR\x04data\"d\n" +
	"\rSetupResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12%\n" +
	"\x04data\x18\x04 \x01(\v2\x11.server.SetupInfoR\x04data\"\x8a\x01\n" +
	"\tSetupInfo\x12\x18\n" +
	"\asetting\x18\x01 \x01(\tR\asetting\x12!\n" +
	"\x03app\x18\b \x01(\v2\x0f.server.AppInfoR\x03app\x12\x1a\n" +
	"\bdeviceId\x18\t \x01(\tR\bdeviceId\x12$\n" +
	"\x03sys\x18\n" +
	" \x01(\v2\x12.server.SystemInfoR\x03sys\"n\n" +
	"\n" +
	"SystemInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1a\n" +
	"\bhostName\x18\x03 \x01(\tR\bhostName\x12\x14\n" +
	"\x05brand\x18\x04 \x01(\tR\x05brand\x12\x14\n" +
	"\x05model\x18\x05 \x01(\tR\x05model\"#\n" +
	"\aAppInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\xd4\x01\n" +
	"\x10SecurityItemInfo\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12'\n" +
	"\x05level\x18\x03 \x01(\x0e2\x11.server.RiskLevelR\x05level\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x12\n" +
	"\x04link\x18\x05 \x01(\tR\x04link\x12\x1e\n" +
	"\n" +
	"repairable\x18\x06 \x01(\bR\n" +
	"repairable\x12\x1f\n" +
	"\vneed_manual\x18\a \x01(\bR\n" +
	"needManual\"n\n" +
	"\x10SecurityResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12,\n" +
	"\x04data\x18\x04 \x03(\v2\x18.server.SecurityItemInfoR\x04data\"(\n" +
	"\x12SecurityFixRequest\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"#\n" +
	"\x0fDiagnoseRequest\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"\\\n" +
	"\x10DiagnoseItemInfo\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"W\n" +
	"\x0fFeedbackRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06logDir\x18\x03 \x01(\tR\x06logDir\"%\n" +
	"\x0fLanguageRequest\x12\x12\n" +
	"\x04lang\x18\x01 \x01(\tR\x04lang\"*\n" +
	"\x10SetDomainRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\"\xf0\x01\n" +
	"\x12CompanyInfoRequest\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06domain\x18\x03 \x01(\tR\x06domain\x12*\n" +
	"\x10enableSelfSigned\x18\x04 \x01(\bR\x10enableSelfSigned\x12&\n" +
	"\x0eselfSignedCert\x18\x05 \x01(\tR\x0eselfSignedCert\x12(\n" +
	"\x0fenablePublicKey\x18\x06 \x01(\bR\x0fenablePublicKey\x12\x1c\n" +
	"\tpublicKey\x18\a \x01(\tR\tpublicKey\"R\n" +
	"\x13NetworkInfoResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12'\n" +
	"\x04data\x18\x04 \x01(\v2\x13.server.NetworkInfoR\x04data\"\xe7\x01\n" +
	"\rCookieRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x16\n" +
	"\x06domain\x18\x04 \x01(\tR\x06domain\x12\x18\n" +
	"\aexpires\x18\x05 \x01(\x03R\aexpires\x12\x16\n" +
	"\x06maxAge\x18\x06 \x01(\x05R\x06maxAge\x12\x16\n" +
	"\x06secure\x18\a \x01(\bR\x06secure\x12\x1a\n" +
	"\bhttpOnly\x18\b \x01(\bR\bhttpOnly\x12\x1a\n" +
	"\bSameSite\x18\t \x01(\x05R\bSameSite\"D\n" +
	"\x11SetCookiesRequest\x12/\n" +
	"\acookies\x18\x01 \x03(\v2\x15.server.CookieRequestR\acookies\"G\n" +
	"\vNetworkInfo\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x05R\x06status\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x10\n" +
	"\x03dns\x18\x03 \x01(\tR\x03dns\"\xb5\x01\n" +
	"\fSoftwareInfo\x12\x1c\n" +
	"\tpublisher\x18\x01 \x01(\tR\tpublisher\x12\x1f\n" +
	"\vsoftware_id\x18\x02 \x01(\tR\n" +
	"softwareId\x12#\n" +
	"\rsoftware_name\x18\x03 \x01(\tR\fsoftwareName\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12'\n" +
	"\x05level\x18\x05 \x01(\x0e2\x11.server.RiskLevelR\x05level\"\x8b\x01\n" +
	"\x11SoftwareAlarmData\x129\n" +
	"\rrequired_list\x18\x01 \x03(\v2\x14.server.SoftwareInfoR\frequiredList\x12;\n" +
	"\x0eforbidden_list\x18\x02 \x03(\v2\x14.server.SoftwareInfoR\rforbiddenList\"t\n" +
	"\x15SoftwareAlarmResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12-\n" +
	"\x04data\x18\x03 \x01(\v2\x19.server.SoftwareAlarmDataR\x04data\"\x86\x01\n" +
	"\x0eWiFiStatusData\x12\x1c\n" +
	"\tconnected\x18\x01 \x01(\bR\tconnected\x12\x12\n" +
	"\x04ssid\x18\x02 \x01(\tR\x04ssid\x12\x14\n" +
	"\x05bssid\x18\x03 \x01(\tR\x05bssid\x12\x12\n" +
	"\x04auth\x18\x04 \x01(\tR\x04auth\x12\x18\n" +
	"\achannel\x18\x05 \x01(\x05R\achannel\"T\n" +
	"\x12WiFiStatusResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12*\n" +
	"\x04data\x18\x03 \x01(\v2\x16.server.WiFiStatusDataR\x04data\"\xc6\x01\n" +
	"\x12WiFiConnectRequest\x12\x12\n" +
	"\x04ssid\x18\x01 \x01(\tR\x04ssid\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12*\n" +
	"\x10isHiddenPassword\x18\x05 \x01(\bR\x10isHiddenPassword\x12$\n" +
	"\rnetAccessType\x18\x06 \x01(\x05R\rnetAccessType\"+\n" +
	"\x15WiFiDisconnectRequest\x12\x12\n" +
	"\x04ssid\x18\x02 \x01(\tR\x04ssid\"m\n" +
	"\vProcessInfo\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x12\x12\n" +
	"\x04sign\x18\x02 \x01(\tR\x04sign\x12'\n" +
	"\x05level\x18\x03 \x01(\x0e2\x11.server.RiskLevelR\x05level\"\x88\x01\n" +
	"\x10ProcessAlarmData\x128\n" +
	"\rrequired_list\x18\x01 \x03(\v2\x13.server.ProcessInfoR\frequiredList\x12:\n" +
	"\x0eforbidden_list\x18\x02 \x03(\v2\x13.server.ProcessInfoR\rforbiddenList\"r\n" +
	"\x14ProcessAlarmResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12,\n" +
	"\x04data\x18\x03 \x01(\v2\x18.server.ProcessAlarmDataR\x04data\"\xce\x01\n" +
	"\x12ConfigWiredRequest\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12*\n" +
	"\x10isHiddenPassword\x18\x05 \x01(\bR\x10isHiddenPassword\x12$\n" +
	"\rnetAccessType\x18\x06 \x01(\x05R\rnetAccessType\x12.\n" +
	"\x12trustedServerNames\x18\a \x03(\tR\x12trustedServerNames\",\n" +
	"\x16GetNotificationRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"`\n" +
	"\x14NotificationResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x124\n" +
	"\x04data\x18\x03 \x01(\v2 .server.NotificationResponseDataR\x04data\"4\n" +
	"\x18NotificationResponseData\x12\x18\n" +
	"\apayload\x18\x01 \x01(\tR\apayload\"v\n" +
	"\x16SecurityModuleResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12.\n" +
	"\x04data\x18\x03 \x01(\v2\x1a.server.SecurityModuleInfoR\x04data\"\x8a\x01\n" +
	"\x12SecurityModuleInfo\x12&\n" +
	"\x0eenableSecurity\x18\x01 \x01(\bR\x0eenableSecurity\x12&\n" +
	"\x0eenableSoftware\x18\x02 \x01(\bR\x0eenableSoftware\x12$\n" +
	"\renableProcess\x18\x03 \x01(\bR\renableProcess\"T\n" +
	"\x12DeviceRuntimeStats\x12\x1e\n" +
	"\n" +
	"cpuPercent\x18\x01 \x01(\x02R\n" +
	"cpuPercent\x12\x1e\n" +
	"\n" +
	"memPercent\x18\x02 \x01(\x02R\n" +
	"memPercent\"j\n" +
	"\x12DeviceInfoResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12&\n" +
	"\x04data\x18\x04 \x01(\v2\x12.server.DeviceInfoR\x04data\"\xb9\x01\n" +
	"\n" +
	"DeviceInfo\x12\x1c\n" +
	"\tosVersion\x18\x01 \x01(\tR\tosVersion\x125\n" +
	"\n" +
	"interfaces\x18\x02 \x03(\v2\x15.server.InterfaceInfoR\n" +
	"interfaces\x12)\n" +
	"\x06routes\x18\x03 \x03(\v2\x11.server.RouteInfoR\x06routes\x12+\n" +
	"\x03vpn\x18\x04 \x01(\v2\x19.server.VPNConnectionInfoR\x03vpn\"\x89\x02\n" +
	"\rInterfaceInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\x12\x16\n" +
	"\x06status\x18\x03 \x01(\x05R\x06status\x12\x12\n" +
	"\x04ipv4\x18\x04 \x03(\tR\x04ipv4\x12\x12\n" +
	"\x04ipv6\x18\x05 \x03(\tR\x04ipv6\x12\x10\n" +
	"\x03mac\x18\x06 \x01(\tR\x03mac\x12\x12\n" +
	"\x04ssid\x18\a \x01(\tR\x04ssid\x12\x16\n" +
	"\x06signal\x18\b \x01(\x05R\x06signal\x12\x12\n" +
	"\x04auth\x18\t \x01(\tR\x04auth\x12\x18\n" +
	"\agateway\x18\n" +
	" \x01(\tR\agateway\x12\x10\n" +
	"\x03dns\x18\v \x03(\tR\x03dns\x12\x12\n" +
	"\x04dhcp\x18\f \x01(\bR\x04dhcp\"\x7f\n" +
	"\tRouteInfo\x12 \n" +
	"\vdestination\x18\x01 \x01(\tR\vdestination\x12\x18\n" +
	"\anetmask\x18\x02 \x01(\tR\anetmask\x12\x18\n" +
	"\agateway\x18\x03 \x01(\tR\agateway\x12\x1c\n" +
	"\tinterface\x18\x04 \x01(\tR\tinterface\"\x80\x01\n" +
	"\x11VPNConnectionInfo\x12)\n" +
	"\x06status\x18\x01 \x01(\x0e2\x11.server.VpnStatusR\x06status\x12\x1e\n" +
	"\n" +
	"serverName\x18\x02 \x01(\tR\n" +
	"serverName\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x10\n" +
	"\x03dns\x18\x04 \x03(\tR\x03dns\"3\n" +
	"\rSetDNSRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\"r\n" +
	"\x14DNSRecommendResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12,\n" +
	"\x04data\x18\x04 \x01(\v2\x18.server.DNSRecommendInfoR\x04data\"Z\n" +
	"\x10DNSRecommendInfo\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.server.DNSRecommendItemR\x05items\"\x85\x01\n" +
	"\x10DNSRecommendItem\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x14\n" +
	"\x05delay\x18\x03 \x01(\x05R\x05delay\x127\n" +
	"\bwebsites\x18\x04 \x03(\v2\x1b.server.DNSWebsiteDelayItemR\bwebsites\"?\n" +
	"\x13DNSWebsiteDelayItem\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05delay\x18\x03 \x01(\x05R\x05delay\"\xec\x02\n" +
	"\x16InstallSoftwareRequest\x12\x1e\n" +
	"\n" +
	"packageKey\x18\x01 \x01(\tR\n" +
	"packageKey\x12 \n" +
	"\vpackagePath\x18\x02 \x01(\tR\vpackagePath\x12\x1a\n" +
	"\bbundleId\x18\x03 \x01(\tR\bbundleId\x12\x1c\n" +
	"\tpublisher\x18\x04 \x01(\tR\tpublisher\x12\"\n" +
	"\fsoftwareName\x18\x05 \x01(\tR\fsoftwareName\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\x12>\n" +
	"\x10silentInstallArg\x18\a \x01(\v2\x12.server.InstallCmdR\x10silentInstallArg\x128\n" +
	"\rinstallDirArg\x18\b \x01(\v2\x12.server.InstallCmdR\rinstallDirArg\x12\x1e\n" +
	"\n" +
	"installDir\x18\t \x01(\tR\n" +
	"installDir\"4\n" +
	"\n" +
	"InstallCmd\x12\x10\n" +
	"\x03arg\x18\x01 \x01(\tR\x03arg\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x05R\x05index\"\xe3\x01\n" +
	"\x19GetInstallTaskInfoRequest\x12\x1e\n" +
	"\n" +
	"packageKey\x18\x01 \x01(\tR\n" +
	"packageKey\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1a\n" +
	"\bbundleId\x18\x03 \x01(\tR\bbundleId\x12\x1c\n" +
	"\tpublisher\x18\x04 \x01(\tR\tpublisher\x12\"\n" +
	"\fsoftwareName\x18\x05 \x01(\tR\fsoftwareName\x12.\n" +
	"\x12enableInstallCheck\x18\x06 \x01(\bR\x12enableInstallCheck\"H\n" +
	"\x17InstallTaskInfoResponse\x12-\n" +
	"\x06status\x18\x03 \x01(\x0e2\x15.server.InstallStatusR\x06status\"\x80\x01\n" +
	"\x19InstalledSoftwareResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x125\n" +
	"\x04data\x18\x03 \x03(\v2!.server.InstalledSoftwareItemInfoR\x04data\"\xa5\x01\n" +
	"\x19InstalledSoftwareItemInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tpublisher\x18\x02 \x01(\tR\tpublisher\x12\x1a\n" +
	"\bbundleId\x18\x03 \x01(\tR\bbundleId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12 \n" +
	"\vinstallTime\x18\x05 \x01(\x03R\vinstallTime\"-\n" +
	"\x15CheckWiFiGuideRequest\x12\x14\n" +
	"\x05ssids\x18\x02 \x03(\tR\x05ssids\")\n" +
	"\x11WiFiRemoveRequest\x12\x14\n" +
	"\x05ssids\x18\x02 \x03(\tR\x05ssids*\x1e\n" +
	"\aVpnMode\x12\t\n" +
	"\x05Split\x10\x00\x12\b\n" +
	"\x04Full\x10\x01*`\n" +
	"\tVpnStatus\x12\x10\n" +
	"\fDisconnected\x10\x00\x12\x0e\n" +
	"\n" +
	"Connecting\x10\x01\x12\r\n" +
	"\tConnected\x10\x02\x12\x11\n" +
	"\rDisconnecting\x10\x03\x12\x0f\n" +
	"\vReasserting\x10\x04*4\n" +
	"\tRiskLevel\x12\b\n" +
	"\x04Zero\x10\x00\x12\a\n" +
	"\x03Low\x10\x01\x12\n" +
	"\n" +
	"\x06Medium\x10\x02\x12\b\n" +
	"\x04High\x10\x03*E\n" +
	"\rInstallStatus\x12\x0e\n" +
	"\n" +
	"Installing\x10\x00\x12\v\n" +
	"\aSuccess\x10\x01\x12\n" +
	"\n" +
	"\x06Failed\x10\x02\x12\v\n" +
	"\aUnknown\x10\x032\x9c\x15\n" +
	"\bCorpLink\x12;\n" +
	"\tsetDomain\x12\x18.server.SetDomainRequest\x1a\x14.server.CodeResponse\x12B\n" +
	"\x0esetCompanyInfo\x12\x1a.server.CompanyInfoRequest\x1a\x14.server.CodeResponse\x12=\n" +
	"\n" +
	"setCookies\x12\x19.server.SetCookiesRequest\x1a\x14.server.CodeResponse\x12?\n" +
	"\fgetVpnStatus\x12\x14.server.EmptyRequest\x1a\x19.server.VpnStatusResponse\x12;\n" +
	"\n" +
	"getVpnList\x12\x14.server.EmptyRequest\x1a\x17.server.VpnListResponse\x12=\n" +
	"\n" +
	"connectVpn\x12\x19.server.ConnectVpnRequest\x1a\x14.server.CodeResponse\x12C\n" +
	"\rchangeVpnMode\x12\x1c.server.ChangeVpnModeRequest\x1a\x14.server.CodeResponse\x12;\n" +
	"\rdisconnectVpn\x12\x14.server.EmptyRequest\x1a\x14.server.CodeResponse\x12;\n" +
	"\fgetSetupInfo\x12\x14.server.EmptyRequest\x1a\x15.server.SetupResponse\x121\n" +
	"\x04http\x12\x13.server.HttpRequest\x1a\x14.server.HttpResponse\x12C\n" +
	"\x11checkSecurityInfo\x12\x14.server.EmptyRequest\x1a\x18.server.SecurityResponse\x12C\n" +
	"\x0ffixSecurityRisk\x12\x1a.server.SecurityFixRequest\x1a\x14.server.CodeResponse\x12A\n" +
	"\x0fgetSecurityInfo\x12\x14.server.EmptyRequest\x1a\x18.server.SecurityResponse\x12=\n" +
	"\fsendFeedback\x12\x17.server.FeedbackRequest\x1a\x14.server.CodeResponse\x124\n" +
	"\x06logout\x12\x14.server.EmptyRequest\x1a\x14.server.CodeResponse\x123\n" +
	"\x05login\x12\x14.server.EmptyRequest\x1a\x14.server.CodeResponse\x12K\n" +
	"\x14startNetworkDiagnose\x12\x17.server.DiagnoseRequest\x1a\x18.server.DiagnoseItemInfo0\x01\x12<\n" +
	"\vsetLanguage\x12\x17.server.LanguageRequest\x1a\x14.server.CodeResponse\x129\n" +
	"\vclientClose\x12\x14.server.EmptyRequest\x1a\x14.server.CodeResponse\x12C\n" +
	"\x0egetNetworkInfo\x12\x14.server.EmptyRequest\x1a\x1b.server.NetworkInfoResponse\x12>\n" +
	"\x10getServiceStatus\x12\x14.server.EmptyRequest\x1a\x14.server.CodeResponse\x12H\n" +
	"\x11checkSoftwareRisk\x12\x14.server.EmptyRequest\x1a\x1d.server.SoftwareAlarmResponse\x12F\n" +
	"\x0fgetSoftwareRisk\x12\x14.server.EmptyRequest\x1a\x1d.server.SoftwareAlarmResponse\x12A\n" +
	"\rgetWiFiStatus\x12\x14.server.EmptyRequest\x1a\x1a.server.WiFiStatusResponse\x12?\n" +
	"\vconnectWiFi\x12\x1a.server.WiFiConnectRequest\x1a\x14.server.CodeResponse\x12E\n" +
	"\x0edisconnectWiFi\x12\x1d.server.WiFiDisconnectRequest\x1a\x14.server.CodeResponse\x12F\n" +
	"\x10checkProcessRisk\x12\x14.server.EmptyRequest\x1a\x1c.server.ProcessAlarmResponse\x12D\n" +
	"\x0egetProcessRisk\x12\x14.server.EmptyRequest\x1a\x1c.server.ProcessAlarmResponse\x12F\n" +
	"\x12configWiredNetwork\x12\x1a.server.ConfigWiredRequest\x1a\x14.server.CodeResponse\x12O\n" +
	"\x0fgetNotification\x12\x1e.server.GetNotificationRequest\x1a\x1c.server.NotificationResponse\x12M\n" +
	"\x15getSecurityModuleInfo\x12\x14.server.EmptyRequest\x1a\x1e.server.SecurityModuleResponse\x12K\n" +
	"\x15getDeviceRuntimeStats\x12\x14.server.EmptyRequest\x1a\x1a.server.DeviceRuntimeStats0\x01\x12A\n" +
	"\rgetDeviceInfo\x12\x14.server.EmptyRequest\x1a\x1a.server.DeviceInfoResponse\x125\n" +
	"\x06setDNS\x12\x15.server.SetDNSRequest\x1a\x14.server.CodeResponse\x12E\n" +
	"\x0fgetDNSRecommend\x12\x14.server.EmptyRequest\x1a\x1c.server.DNSRecommendResponse\x12G\n" +
	"\x0finstallSoftware\x12\x1e.server.InstallSoftwareRequest\x1a\x14.server.CodeResponse\x12Z\n" +
	"\x12getInstallTaskInfo\x12!.server.GetInstallTaskInfoRequest\x1a\x1f.server.InstallTaskInfoResponse0\x01\x12S\n" +
	"\x18getInstalledSoftwareInfo\x12\x14.server.EmptyRequest\x1a!.server.InstalledSoftwareResponse\x12E\n" +
	"\x0echeckWiFiGuide\x12\x1d.server.CheckWiFiGuideRequest\x1a\x14.server.CodeResponse\x12=\n" +
	"\n" +
	"removeWiFi\x12\x19.server.WiFiRemoveRequest\x1a\x14.server.CodeResponseB\tZ\a./protob\x06proto3"

var (
	file_pkg_proto_server_proto_rawDescOnce sync.Once
	file_pkg_proto_server_proto_rawDescData []byte
)

func file_pkg_proto_server_proto_rawDescGZIP() []byte {
	file_pkg_proto_server_proto_rawDescOnce.Do(func() {
		file_pkg_proto_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_server_proto_rawDesc), len(file_pkg_proto_server_proto_rawDesc)))
	})
	return file_pkg_proto_server_proto_rawDescData
}

var file_pkg_proto_server_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pkg_proto_server_proto_msgTypes = make([]protoimpl.MessageInfo, 62)
var file_pkg_proto_server_proto_goTypes = []any{
	(VpnMode)(0),                      // 0: server.VpnMode
	(VpnStatus)(0),                    // 1: server.VpnStatus
	(RiskLevel)(0),                    // 2: server.RiskLevel
	(InstallStatus)(0),                // 3: server.InstallStatus
	(*EmptyRequest)(nil),              // 4: server.EmptyRequest
	(*CodeResponse)(nil),              // 5: server.CodeResponse
	(*VpnListResponse)(nil),           // 6: server.VpnListResponse
	(*VpnItemInfo)(nil),               // 7: server.VpnItemInfo
	(*VpnStatusResponse)(nil),         // 8: server.VpnStatusResponse
	(*VpnStatusInfo)(nil),             // 9: server.VpnStatusInfo
	(*ConnectVpnRequest)(nil),         // 10: server.ConnectVpnRequest
	(*ChangeVpnModeRequest)(nil),      // 11: server.ChangeVpnModeRequest
	(*HttpRequest)(nil),               // 12: server.HttpRequest
	(*HttpResponse)(nil),              // 13: server.HttpResponse
	(*SetupResponse)(nil),             // 14: server.SetupResponse
	(*SetupInfo)(nil),                 // 15: server.SetupInfo
	(*SystemInfo)(nil),                // 16: server.SystemInfo
	(*AppInfo)(nil),                   // 17: server.AppInfo
	(*SecurityItemInfo)(nil),          // 18: server.SecurityItemInfo
	(*SecurityResponse)(nil),          // 19: server.SecurityResponse
	(*SecurityFixRequest)(nil),        // 20: server.SecurityFixRequest
	(*DiagnoseRequest)(nil),           // 21: server.DiagnoseRequest
	(*DiagnoseItemInfo)(nil),          // 22: server.DiagnoseItemInfo
	(*FeedbackRequest)(nil),           // 23: server.FeedbackRequest
	(*LanguageRequest)(nil),           // 24: server.LanguageRequest
	(*SetDomainRequest)(nil),          // 25: server.SetDomainRequest
	(*CompanyInfoRequest)(nil),        // 26: server.CompanyInfoRequest
	(*NetworkInfoResponse)(nil),       // 27: server.NetworkInfoResponse
	(*CookieRequest)(nil),             // 28: server.CookieRequest
	(*SetCookiesRequest)(nil),         // 29: server.SetCookiesRequest
	(*NetworkInfo)(nil),               // 30: server.NetworkInfo
	(*SoftwareInfo)(nil),              // 31: server.SoftwareInfo
	(*SoftwareAlarmData)(nil),         // 32: server.SoftwareAlarmData
	(*SoftwareAlarmResponse)(nil),     // 33: server.SoftwareAlarmResponse
	(*WiFiStatusData)(nil),            // 34: server.WiFiStatusData
	(*WiFiStatusResponse)(nil),        // 35: server.WiFiStatusResponse
	(*WiFiConnectRequest)(nil),        // 36: server.WiFiConnectRequest
	(*WiFiDisconnectRequest)(nil),     // 37: server.WiFiDisconnectRequest
	(*ProcessInfo)(nil),               // 38: server.ProcessInfo
	(*ProcessAlarmData)(nil),          // 39: server.ProcessAlarmData
	(*ProcessAlarmResponse)(nil),      // 40: server.ProcessAlarmResponse
	(*ConfigWiredRequest)(nil),        // 41: server.ConfigWiredRequest
	(*GetNotificationRequest)(nil),    // 42: server.GetNotificationRequest
	(*NotificationResponse)(nil),      // 43: server.NotificationResponse
	(*NotificationResponseData)(nil),  // 44: server.NotificationResponseData
	(*SecurityModuleResponse)(nil),    // 45: server.SecurityModuleResponse
	(*SecurityModuleInfo)(nil),        // 46: server.SecurityModuleInfo
	(*DeviceRuntimeStats)(nil),        // 47: server.DeviceRuntimeStats
	(*DeviceInfoResponse)(nil),        // 48: server.DeviceInfoResponse
	(*DeviceInfo)(nil),                // 49: server.DeviceInfo
	(*InterfaceInfo)(nil),             // 50: server.InterfaceInfo
	(*RouteInfo)(nil),                 // 51: server.RouteInfo
	(*VPNConnectionInfo)(nil),         // 52: server.VPNConnectionInfo
	(*SetDNSRequest)(nil),             // 53: server.SetDNSRequest
	(*DNSRecommendResponse)(nil),      // 54: server.DNSRecommendResponse
	(*DNSRecommendInfo)(nil),          // 55: server.DNSRecommendInfo
	(*DNSRecommendItem)(nil),          // 56: server.DNSRecommendItem
	(*DNSWebsiteDelayItem)(nil),       // 57: server.DNSWebsiteDelayItem
	(*InstallSoftwareRequest)(nil),    // 58: server.InstallSoftwareRequest
	(*InstallCmd)(nil),                // 59: server.InstallCmd
	(*GetInstallTaskInfoRequest)(nil), // 60: server.GetInstallTaskInfoRequest
	(*InstallTaskInfoResponse)(nil),   // 61: server.InstallTaskInfoResponse
	(*InstalledSoftwareResponse)(nil), // 62: server.InstalledSoftwareResponse
	(*InstalledSoftwareItemInfo)(nil), // 63: server.InstalledSoftwareItemInfo
	(*CheckWiFiGuideRequest)(nil),     // 64: server.CheckWiFiGuideRequest
	(*WiFiRemoveRequest)(nil),         // 65: server.WiFiRemoveRequest
}
var file_pkg_proto_server_proto_depIdxs = []int32{
	7,  // 0: server.VpnListResponse.splitList:type_name -> server.VpnItemInfo
	7,  // 1: server.VpnListResponse.fullList:type_name -> server.VpnItemInfo
	9,  // 2: server.VpnStatusResponse.data:type_name -> server.VpnStatusInfo
	1,  // 3: server.VpnStatusInfo.status:type_name -> server.VpnStatus
	0,  // 4: server.VpnStatusInfo.mode:type_name -> server.VpnMode
	0,  // 5: server.ConnectVpnRequest.mode:type_name -> server.VpnMode
	0,  // 6: server.ChangeVpnModeRequest.mode:type_name -> server.VpnMode
	15, // 7: server.SetupResponse.data:type_name -> server.SetupInfo
	17, // 8: server.SetupInfo.app:type_name -> server.AppInfo
	16, // 9: server.SetupInfo.sys:type_name -> server.SystemInfo
	2,  // 10: server.SecurityItemInfo.level:type_name -> server.RiskLevel
	18, // 11: server.SecurityResponse.data:type_name -> server.SecurityItemInfo
	30, // 12: server.NetworkInfoResponse.data:type_name -> server.NetworkInfo
	28, // 13: server.SetCookiesRequest.cookies:type_name -> server.CookieRequest
	2,  // 14: server.SoftwareInfo.level:type_name -> server.RiskLevel
	31, // 15: server.SoftwareAlarmData.required_list:type_name -> server.SoftwareInfo
	31, // 16: server.SoftwareAlarmData.forbidden_list:type_name -> server.SoftwareInfo
	32, // 17: server.SoftwareAlarmResponse.data:type_name -> server.SoftwareAlarmData
	34, // 18: server.WiFiStatusResponse.data:type_name -> server.WiFiStatusData
	2,  // 19: server.ProcessInfo.level:type_name -> server.RiskLevel
	38, // 20: server.ProcessAlarmData.required_list:type_name -> server.ProcessInfo
	38, // 21: server.ProcessAlarmData.forbidden_list:type_name -> server.ProcessInfo
	39, // 22: server.ProcessAlarmResponse.data:type_name -> server.ProcessAlarmData
	44, // 23: server.NotificationResponse.data:type_name -> server.NotificationResponseData
	46, // 24: server.SecurityModuleResponse.data:type_name -> server.SecurityModuleInfo
	49, // 25: server.DeviceInfoResponse.data:type_name -> server.DeviceInfo
	50, // 26: server.DeviceInfo.interfaces:type_name -> server.InterfaceInfo
	51, // 27: server.DeviceInfo.routes:type_name -> server.RouteInfo
	52, // 28: server.DeviceInfo.vpn:type_name -> server.VPNConnectionInfo
	1,  // 29: server.VPNConnectionInfo.status:type_name -> server.VpnStatus
	55, // 30: server.DNSRecommendResponse.data:type_name -> server.DNSRecommendInfo
	56, // 31: server.DNSRecommendInfo.items:type_name -> server.DNSRecommendItem
	57, // 32: server.DNSRecommendItem.websites:type_name -> server.DNSWebsiteDelayItem
	59, // 33: server.InstallSoftwareRequest.silentInstallArg:type_name -> server.InstallCmd
	59, // 34: server.InstallSoftwareRequest.installDirArg:type_name -> server.InstallCmd
	3,  // 35: server.InstallTaskInfoResponse.status:type_name -> server.InstallStatus
	63, // 36: server.InstalledSoftwareResponse.data:type_name -> server.InstalledSoftwareItemInfo
	25, // 37: server.CorpLink.setDomain:input_type -> server.SetDomainRequest
	26, // 38: server.CorpLink.setCompanyInfo:input_type -> server.CompanyInfoRequest
	29, // 39: server.CorpLink.setCookies:input_type -> server.SetCookiesRequest
	4,  // 40: server.CorpLink.getVpnStatus:input_type -> server.EmptyRequest
	4,  // 41: server.CorpLink.getVpnList:input_type -> server.EmptyRequest
	10, // 42: server.CorpLink.connectVpn:input_type -> server.ConnectVpnRequest
	11, // 43: server.CorpLink.changeVpnMode:input_type -> server.ChangeVpnModeRequest
	4,  // 44: server.CorpLink.disconnectVpn:input_type -> server.EmptyRequest
	4,  // 45: server.CorpLink.getSetupInfo:input_type -> server.EmptyRequest
	12, // 46: server.CorpLink.http:input_type -> server.HttpRequest
	4,  // 47: server.CorpLink.checkSecurityInfo:input_type -> server.EmptyRequest
	20, // 48: server.CorpLink.fixSecurityRisk:input_type -> server.SecurityFixRequest
	4,  // 49: server.CorpLink.getSecurityInfo:input_type -> server.EmptyRequest
	23, // 50: server.CorpLink.sendFeedback:input_type -> server.FeedbackRequest
	4,  // 51: server.CorpLink.logout:input_type -> server.EmptyRequest
	4,  // 52: server.CorpLink.login:input_type -> server.EmptyRequest
	21, // 53: server.CorpLink.startNetworkDiagnose:input_type -> server.DiagnoseRequest
	24, // 54: server.CorpLink.setLanguage:input_type -> server.LanguageRequest
	4,  // 55: server.CorpLink.clientClose:input_type -> server.EmptyRequest
	4,  // 56: server.CorpLink.getNetworkInfo:input_type -> server.EmptyRequest
	4,  // 57: server.CorpLink.getServiceStatus:input_type -> server.EmptyRequest
	4,  // 58: server.CorpLink.checkSoftwareRisk:input_type -> server.EmptyRequest
	4,  // 59: server.CorpLink.getSoftwareRisk:input_type -> server.EmptyRequest
	4,  // 60: server.CorpLink.getWiFiStatus:input_type -> server.EmptyRequest
	36, // 61: server.CorpLink.connectWiFi:input_type -> server.WiFiConnectRequest
	37, // 62: server.CorpLink.disconnectWiFi:input_type -> server.WiFiDisconnectRequest
	4,  // 63: server.CorpLink.checkProcessRisk:input_type -> server.EmptyRequest
	4,  // 64: server.CorpLink.getProcessRisk:input_type -> server.EmptyRequest
	41, // 65: server.CorpLink.configWiredNetwork:input_type -> server.ConfigWiredRequest
	42, // 66: server.CorpLink.getNotification:input_type -> server.GetNotificationRequest
	4,  // 67: server.CorpLink.getSecurityModuleInfo:input_type -> server.EmptyRequest
	4,  // 68: server.CorpLink.getDeviceRuntimeStats:input_type -> server.EmptyRequest
	4,  // 69: server.CorpLink.getDeviceInfo:input_type -> server.EmptyRequest
	53, // 70: server.CorpLink.setDNS:input_type -> server.SetDNSRequest
	4,  // 71: server.CorpLink.getDNSRecommend:input_type -> server.EmptyRequest
	58, // 72: server.CorpLink.installSoftware:input_type -> server.InstallSoftwareRequest
	60, // 73: server.CorpLink.getInstallTaskInfo:input_type -> server.GetInstallTaskInfoRequest
	4,  // 74: server.CorpLink.getInstalledSoftwareInfo:input_type -> server.EmptyRequest
	64, // 75: server.CorpLink.checkWiFiGuide:input_type -> server.CheckWiFiGuideRequest
	65, // 76: server.CorpLink.removeWiFi:input_type -> server.WiFiRemoveRequest
	5,  // 77: server.CorpLink.setDomain:output_type -> server.CodeResponse
	5,  // 78: server.CorpLink.setCompanyInfo:output_type -> server.CodeResponse
	5,  // 79: server.CorpLink.setCookies:output_type -> server.CodeResponse
	8,  // 80: server.CorpLink.getVpnStatus:output_type -> server.VpnStatusResponse
	6,  // 81: server.CorpLink.getVpnList:output_type -> server.VpnListResponse
	5,  // 82: server.CorpLink.connectVpn:output_type -> server.CodeResponse
	5,  // 83: server.CorpLink.changeVpnMode:output_type -> server.CodeResponse
	5,  // 84: server.CorpLink.disconnectVpn:output_type -> server.CodeResponse
	14, // 85: server.CorpLink.getSetupInfo:output_type -> server.SetupResponse
	13, // 86: server.CorpLink.http:output_type -> server.HttpResponse
	19, // 87: server.CorpLink.checkSecurityInfo:output_type -> server.SecurityResponse
	5,  // 88: server.CorpLink.fixSecurityRisk:output_type -> server.CodeResponse
	19, // 89: server.CorpLink.getSecurityInfo:output_type -> server.SecurityResponse
	5,  // 90: server.CorpLink.sendFeedback:output_type -> server.CodeResponse
	5,  // 91: server.CorpLink.logout:output_type -> server.CodeResponse
	5,  // 92: server.CorpLink.login:output_type -> server.CodeResponse
	22, // 93: server.CorpLink.startNetworkDiagnose:output_type -> server.DiagnoseItemInfo
	5,  // 94: server.CorpLink.setLanguage:output_type -> server.CodeResponse
	5,  // 95: server.CorpLink.clientClose:output_type -> server.CodeResponse
	27, // 96: server.CorpLink.getNetworkInfo:output_type -> server.NetworkInfoResponse
	5,  // 97: server.CorpLink.getServiceStatus:output_type -> server.CodeResponse
	33, // 98: server.CorpLink.checkSoftwareRisk:output_type -> server.SoftwareAlarmResponse
	33, // 99: server.CorpLink.getSoftwareRisk:output_type -> server.SoftwareAlarmResponse
	35, // 100: server.CorpLink.getWiFiStatus:output_type -> server.WiFiStatusResponse
	5,  // 101: server.CorpLink.connectWiFi:output_type -> server.CodeResponse
	5,  // 102: server.CorpLink.disconnectWiFi:output_type -> server.CodeResponse
	40, // 103: server.CorpLink.checkProcessRisk:output_type -> server.ProcessAlarmResponse
	40, // 104: server.CorpLink.getProcessRisk:output_type -> server.ProcessAlarmResponse
	5,  // 105: server.CorpLink.configWiredNetwork:output_type -> server.CodeResponse
	43, // 106: server.CorpLink.getNotification:output_type -> server.NotificationResponse
	45, // 107: server.CorpLink.getSecurityModuleInfo:output_type -> server.SecurityModuleResponse
	47, // 108: server.CorpLink.getDeviceRuntimeStats:output_type -> server.DeviceRuntimeStats
	48, // 109: server.CorpLink.getDeviceInfo:output_type -> server.DeviceInfoResponse
	5,  // 110: server.CorpLink.setDNS:output_type -> server.CodeResponse
	54, // 111: server.CorpLink.getDNSRecommend:output_type -> server.DNSRecommendResponse
	5,  // 112: server.CorpLink.installSoftware:output_type -> server.CodeResponse
	61, // 113: server.CorpLink.getInstallTaskInfo:output_type -> server.InstallTaskInfoResponse
	62, // 114: server.CorpLink.getInstalledSoftwareInfo:output_type -> server.InstalledSoftwareResponse
	5,  // 115: server.CorpLink.checkWiFiGuide:output_type -> server.CodeResponse
	5,  // 116: server.CorpLink.removeWiFi:output_type -> server.CodeResponse
	77, // [77:117] is the sub-list for method output_type
	37, // [37:77] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_pkg_proto_server_proto_init() }
func file_pkg_proto_server_proto_init() {
	if File_pkg_proto_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_server_proto_rawDesc), len(file_pkg_proto_server_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   62,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_server_proto_goTypes,
		DependencyIndexes: file_pkg_proto_server_proto_depIdxs,
		EnumInfos:         file_pkg_proto_server_proto_enumTypes,
		MessageInfos:      file_pkg_proto_server_proto_msgTypes,
	}.Build()
	File_pkg_proto_server_proto = out.File
	file_pkg_proto_server_proto_goTypes = nil
	file_pkg_proto_server_proto_depIdxs = nil
}
